# check if python version is set in current dir
if [ -f ".python-version" ] ; then
    # ensure the python version is installed, if not, install it and configure
    # for compatibility with `auto-pyvenv`
    if [[ ! "$(pyenv versions | egrep $(cat .python-version))" ]] ; then
        echo -n "Python version not found, installing "
        echo "$(cat .python-version)"
        pyenv install "$(cat .python-version)"
        # rehash pyenv due to new install
        pyenv rehash
        # initial pyenv
        eval "$(pyenv init -)"
        echo "Upgrading pip to latest"
        pyenv shell $(cat .python-version)
        # upgrading setuptools in the event they are too old for `py2venv`
        pip install --upgrade pip setuptools
        if [ $(cat .python-version | egrep '^2.') ] ; then
            # `py2venv` allows you to install a virtualenv with
            # `python -m venv .venv`
            echo "Python 2.x detected.  Installing 'py2venv'"
            pip install py2venv
        fi
    fi
    if [ ! -d ".venv" ] ; then
        echo -n "Installing virtualenv for "
        echo "$(python -V)"
        python -m venv .venv
    fi
    echo -n "Activating virtualenv for "
    echo "$(python -V)"
    source .venv/bin/activate
else
    python -m venv .venv
fi

echo -n "Virtualenv has been activated for "
echo "$(python -V)"
echo "$(which python)"
